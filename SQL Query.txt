  # Create Table

  CREATE TABLE kimia_farma.analytics_table AS
  SELECT
      t.transaction_id,
      t.date,
      t.branch_id,
      c.branch_name,
      c.kota,
      c.provinsi,
      c.rating AS rating_cabang,
      t.customer_name,
      t.product_id,
      p.product_name,
      p.price AS actual_price, # the actual price in "product" table
      t.discount_percentage,
      CASE
          WHEN p.price <= 50000 THEN 0.1
          WHEN p.price > 50000 AND p.price <= 100000 THEN 0.15
          WHEN p.price > 100000 AND p.price <= 300000 THEN 0.2
          WHEN p.price > 300000 AND p.price <= 500000 THEN 0.25
          ELSE 0.3
      END AS persentase_gross_laba,
      (p.price * (1 - t.discount_percentage)) AS nett_sales,
      (p.price * (1 - t.discount_percentage) * 
          CASE 
              WHEN p.price <= 50000 THEN 0.10
              WHEN p.price > 50000 AND p.price <= 100000 THEN 0.15
              WHEN p.price > 100000 AND p.price <= 300000 THEN 0.2
              WHEN p.price > 300000 AND p.price <= 500000 THEN 0.25
              ELSE 0.3
        END) AS nett_profit,
    t.rating AS rating_transaksi
  FROM 
    kimia_farma.kf_final_transaction as t
  JOIN
    kimia_farma.kf_kantor_cabang as c ON t.branch_id = c.branch_id
  JOIN
    kimia_farma.kf_product as p ON t.product_id = p.product_id;

  # Comparison of Kimia Farma's Revenue from year to year

  SELECT
    EXTRACT(YEAR FROM a.date) as Year,
    SUM(nett_sales) as Total_Revenue
  FROM
    kimia_farma.analytics_table a
  GROUP BY
    Year
  ORDER BY
    Year
  DESC;

  # Top 10 Total Transaction of Branch by Province

  SELECT
    COUNT(transaction_id) AS Total_Transaksi,
    provinsi
  FROM
      kimia_farma.analytics_table
  GROUP BY
    provinsi
  ORDER BY
    Total_Transaksi
  DESC
  LIMIT 10;

  # Top 10 Nett sales cabang provinsi

  SELECT
    SUM(nett_sales) AS Total_Sales,
    provinsi
  FROM
    kimia_farma.analytics_table
  GROUP BY
    provinsi
  ORDER BY
    Total_Sales
  DESC
  LIMIT 10;

  # Top 5 Branch with highest branch rating but lowest transaction rating

  SELECT
    branch_name,
    provinsi,
    AVG(rating_cabang) AS Rating_Cabang,
    AVG(rating_transaksi) AS Rating_Transaksi 
  FROM
    kimia_farma.analytics_table
  GROUP BY
    branch_name,
    provinsi
  ORDER BY
    Rating_Cabang DESC,
    Rating_Transaksi ASC
  LIMIT 5;
